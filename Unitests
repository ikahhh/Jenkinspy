import psutil
import requests

class SystemMonitor:
    @staticmethod
    def check_disk_usage():
        disk_usage = psutil.disk_usage('/')
        return disk_usage.percent > 20

    @staticmethod
    def check_cpu_utilization():
        cpu_utilization = psutil.cpu_percent()
        return cpu_utilization < 75

    @staticmethod
    def check_localhost_availability():
        try:
            response = requests.get('http://localhost', timeout=1)
            return response.status_code == 200
        except requests.ConnectionError:
            return False

    @staticmethod
    def check_internet_availability():
        try:
            response = requests.get('http://www.google.com', timeout=1)
            return response.status_code == 200
        except requests.ConnectionError:
            return False

def perform_system_status_check():
    monitor = SystemMonitor()

    disk_status = monitor.check_disk_usage()
    cpu_status = monitor.check_cpu_utilization()
    localhost_status = monitor.check_localhost_availability()
    internet_status = monitor.check_internet_availability()

    if not (disk_status and cpu_status):
        print("ERROR! Disk usage or CPU utilization failed.")
    elif localhost_status and internet_status:
        print("Everything is OK.")
    else:
        print("Network checks failed.")

def test_system_monitor():
    monitor = SystemMonitor()

    assert monitor.check_disk_usage() == True
    assert monitor.check_cpu_utilization() == True
    assert monitor.check_localhost_availability() == True
    assert monitor.check_internet_availability() == True

if __name__ == "__main__":
    perform_system_status_check()
    test_system_monitor()
